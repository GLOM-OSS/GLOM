datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

enum Gender {
    Male
    Female

    @@map("gender_enum")
}

enum Lang {
    En
    Fr

    @@map("preferred_lang_enum")
}

model Person {
    person_id          String   @id @default(uuid()) @db.VarChar(36)
    first_name         String   @db.VarChar(50)
    last_name          String   @db.VarChar(50)
    phone_number       String   @unique @db.VarChar(15)
    birthdate          DateTime @db.DateTime(0)
    gender             Gender
    national_id_number String   @db.VarChar(15)
    address            String?  @db.VarChar(100)
    longitude          Int?
    latitude           Int?
    email              String   @unique @db.VarChar(50)
    preferred_lang     Lang     @default(Fr)
    image_ref          String?  @db.VarChar(50)
    created_at         DateTime @default(now()) @db.DateTime(0)

    Schools      School[]
    PersonAudits PersonAudit[]
    Logins       Login[]
}

model PersonAudit {
    person_audit_id    String              @id @default(uuid()) @db.VarChar(36)
    first_name         String              @db.VarChar(50)
    last_name          String              @db.VarChar(50)
    phone_number       String              @db.VarChar(15)
    birthdate          DateTime            @db.DateTime(0)
    gender             Gender
    national_id_number String              @db.VarChar(15)
    address            String?             @db.VarChar(100)
    longitude          Int?
    latitude           Int?
    email              String              @db.VarChar(50)
    preferred_lang     Lang
    image_ref          String?             @db.VarChar(50)
    audited_at         DateTime            @default(now()) @db.DateTime(0)
    person_id          String              @db.VarChar(36)
    Person             Person              @relation(fields: [person_id], references: [person_id], onDelete: Cascade, onUpdate: Cascade)
    audited_by         String?             @db.VarChar(36)
    AnnualConfigurator AnnualConfigurator? @relation(fields: [audited_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)
}

model School {
    school_id              String   @id @default(uuid()) @db.VarChar(36)
    address                String?  @db.VarChar(20)
    longitude              Int?
    latitude               Int?
    school_name            String   @db.VarChar(50)
    school_code            String   @unique @db.VarChar(45)
    school_acronym         String   @db.VarChar(45)
    school_email           String   @unique @db.VarChar(50)
    school_phone_number    String   @db.VarChar(15)
    description            String?  @db.Text
    logo_ref               String?  @db.VarChar(45)
    subdomain              String?  @db.VarChar(30)
    creation_decree_number String?  @db.VarChar(45)
    is_validated           Boolean  @default(false) @db.TinyInt
    is_deleted             Boolean  @default(false) @db.TinyInt
    created_at             DateTime @default(now()) @db.DateTime(0)
    demanded_by            String   @db.VarChar(36)
    Person                 Person   @relation(fields: [demanded_by], references: [person_id], onDelete: Cascade, onUpdate: Cascade)

    Logins       Login[]
    Departments  Department[]
    AcademicYear AcademicYear[]

    SchoolDemand SchoolDemand?
}

model SchoolAudit {
    school_audit_id        String              @id @default(uuid()) @db.VarChar(36)
    address                String?             @db.VarChar(20)
    longitude              Int?
    latitude               Int?
    school_name            String              @db.VarChar(50)
    school_code            String              @db.VarChar(45)
    school_acronym         String              @db.VarChar(45)
    school_email           String              @unique @db.VarChar(50)
    school_phone_number    String              @db.VarChar(15)
    description            String?             @db.Text
    logo_ref               String?             @db.VarChar(45)
    subdomain              String?             @db.VarChar(30)
    creation_decree_number String?             @db.VarChar(45)
    is_validated           Boolean             @db.TinyInt
    is_deleted             Boolean             @db.TinyInt
    audited_at             DateTime            @default(now()) @db.DateTime(0)
    audited_by             String?             @db.VarChar(36)
    AnnualConfigurator     AnnualConfigurator? @relation(fields: [audited_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)
}

enum SchoolDemandStatus {
    PENDING
    PROGRESS
    REJECTED
    VALIDATED

    @@map("school_demand_status_enum")
}

model SchoolDemand {
    school_demand_id String             @id @default(uuid()) @db.VarChar(36)
    demand_status    SchoolDemandStatus @default(PENDING)
    demanded_at      DateTime           @default(now()) @db.DateTime(0)
    rejection_reason String?            @db.Text
    school_id        String             @unique
    School           School             @relation(fields: [school_id], references: [school_id], onDelete: Cascade, onUpdate: Cascade)

    SchoolDemandAudits SchoolDemandAudit[]
}

model SchoolDemandAudit {
    school_demand_audit_id String             @id @default(uuid()) @db.VarChar(36)
    rejection_reason       String?            @db.Text
    school_demand_id       String             @db.VarChar(36)
    audited_at             DateTime           @default(now()) @db.DateTime(0)
    demand_status          SchoolDemandStatus @default(PENDING)
    SchoolDemand           SchoolDemand       @relation(fields: [school_demand_id], references: [school_demand_id], onDelete: Cascade, onUpdate: Cascade)
    audited_by             String             @db.VarChar(36)
    Login                  Login              @relation(fields: [audited_by], references: [login_id], onDelete: Cascade, onUpdate: Cascade)
}

enum AcademicYearStatus {
    INACTIVE
    ACTIVE
    FINISHED

    @@map("academic_year_status_enum")
}

model AcademicYear {
    academic_year_id   String              @id @default(uuid()) @db.VarChar(36)
    starts_at          DateTime            @db.DateTime(0)
    ends_at            DateTime            @db.DateTime(0)
    started_at         DateTime?           @db.DateTime(0)
    ended_at           DateTime?           @db.DateTime(0)
    year_status        AcademicYearStatus  @default(INACTIVE)
    year_code          String              @unique @db.VarChar(36)
    is_deleted         Boolean             @default(false) @db.TinyInt
    created_at         DateTime            @default(now()) @db.DateTime(0)
    school_id          String              @db.VarChar(36)
    School             School              @relation(fields: [school_id], references: [school_id], onDelete: Cascade, onUpdate: Cascade)
    created_by         String?             @db.VarChar(36)
    AnnualConfigurator AnnualConfigurator? @relation(fields: [created_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)

    AnnualRegistries               AnnualRegistry[]
    AnnualTeachers                 AnnualTeacher[]
    AnnualStudents                 AnnualStudent[]
    AnnualMajors                   AnnualMajor[]
    AnnualClassrooms               AnnualClassroom[]
    AnnualConfigurators            AnnualConfigurator[]            @relation(name: "Configurator_AcademiqueYear")
    AnnualCreditUnits              AnnualCreditUnit[]
    AnnualCarryOverSytems          AnnualCarryOverSytem[]
    AnnualMinimumModulationScores  AnnualMinimumModulationScore[]
    AnnualEvaluationTypeWeightings AnnualEvaluationTypeWeighting[]
    AnnualAcademicProfiles         AnnualAcademicProfile[]
    AnnualSemesterExamAcess        AnnualSemesterExamAcess[]
    AnnualWeightings               AnnualWeighting[]
    AnnualGradeWeightings          AnnualGradeWeighting[]
    AnnualEvaluationSubTypes       AnnualEvaluationSubType[]
}

model Login {
    login_id     String   @id @default(uuid()) @db.VarChar(36)
    password     String   @db.VarChar(75)
    cookie_age   Int      @default(3600) //60* 60 seconds of inativity
    is_personnel Boolean  @default(false) @db.TinyInt
    is_deleted   Boolean  @default(false) @db.TinyInt()
    created_at   DateTime @default(now()) @db.DateTime(0)
    person_id    String   @db.VarChar(36)
    Person       Person   @relation(fields: [person_id], references: [person_id], onDelete: Cascade, onUpdate: Cascade)
    school_id    String?  @db.VarChar(36)
    School       School?  @relation(fields: [school_id], references: [school_id], onDelete: Cascade, onUpdate: Cascade)

    LoginAudits          LoginAudit[]
    ResetPasswords       ResetPassword[]
    AnnualConfigurators  AnnualConfigurator[]
    AdminResetPasswwords ResetPassword[]      @relation("Admin_Generated_ResetPassword")
    Logs                 Log[]
    Students             Student[]
    AnnualRegistries     AnnualRegistry[]
    AnnualTeachers       AnnualTeacher[]
    SchoolDemandAudits   SchoolDemandAudit[]

    @@unique([person_id, school_id])
}

model AnnualConfigurator {
    annual_configurator_id    String              @id @default(uuid()) @db.VarChar(36)
    is_sudo                   Boolean             @default(false) @db.TinyInt
    matricule                 String              @db.VarChar(20)
    is_deleted                Boolean             @default(false) @db.TinyInt
    login_id                  String              @db.VarChar(36)
    Login                     Login               @relation(fields: [login_id], references: [login_id], onDelete: Cascade, onUpdate: Cascade)
    deleted_at                DateTime?           @db.DateTime(0)
    deleted_by                String?
    AnnualConfiguratorAuditer AnnualConfigurator? @relation(name: "DeletedBy_AnnualConfigurator", fields: [deleted_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)
    added_by                  String?
    AnnualConfigurator        AnnualConfigurator? @relation(name: "AddedBy_AnnualConfigurator", fields: [added_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)
    academic_year_id          String              @db.VarChar(36)
    AcademicYear              AcademicYear        @relation(name: "Configurator_AcademiqueYear", fields: [academic_year_id], references: [academic_year_id], onDelete: Cascade, onUpdate: Cascade)

    Majors                        Major[]
    Classrooms                    Classroom[]
    Departments                   Department[]
    MajorAudits                   MajorAudit[]
    PersonAudits                  PersonAudit[]
    AcademicYears                 AcademicYear[]
    ResetPasswords                ResetPassword[]
    AnnualTeachers                AnnualTeacher[]
    AnnualRegistries              AnnualRegistry[]
    DepartmentAudits              DepartmentAudit[]
    AddedAnnualConfigurators      AnnualConfigurator[]           @relation(name: "AddedBy_AnnualConfigurator")
    AnnualTeacherAudits           AnnualTeacherAudit[]
    AnnualClassroomAudits         AnnualClassroomAudit[]
    SchoolAudits                  SchoolAudit[]
    AnnualMajors                  AnnualMajor[]
    AnnualMajorAudits             AnnualMajorAudit[]
    AnnualClassroomDivisions      AnnualClassroomDivision[]
    AnnualClassroomDivisionAudits AnnualClassroomDivisionAudit[]
    AnnualRegistryAudit           AnnualRegistryAudit[]
    TeacherAudits                 TeacherAudit[]
    AnnualConfiguratorAuditers    AnnualConfigurator[]           @relation(name: "DeletedBy_AnnualConfigurator")
    AnnualCarryOverSytems         AnnualCarryOverSytem[]
    AnnualSemesterExamAcess       AnnualSemesterExamAcess[]

    @@unique([login_id, academic_year_id])
    @@unique([login_id, matricule])
}

model LoginAudit {
    login_audit_id String   @id @default(uuid()) @db.VarChar(36)
    password       String   @db.VarChar(75)
    cookie_age     Int //10* 60 seconds of inativity
    is_personnel   Boolean  @db.TinyInt
    is_deleted     Boolean  @db.TinyInt
    audited_at     DateTime @default(now()) @db.DateTime(0)
    login_id       String   @db.VarChar(36)
    Login          Login    @relation(fields: [login_id], references: [login_id], onDelete: Cascade, onUpdate: Cascade)
}

model Student {
    student_id   String    @id @default(uuid()) @db.VarChar(36)
    matricule    String    @unique @db.VarChar(45)
    classroom_id String    @db.VarChar(36)
    Classroom    Classroom @relation(fields: [classroom_id], references: [classroom_id], onDelete: Cascade, onUpdate: Cascade)
    login_id     String    @db.VarChar(36)
    Login        Login     @relation(fields: [login_id], references: [login_id], onDelete: Cascade, onUpdate: Cascade)

    AnnualStudents AnnualStudent[]
}

model AnnualStudent {
    annual_student_id String       @id @default(uuid()) @db.VarChar(36)
    is_deleted        Boolean      @default(false) @db.TinyInt
    student_id        String
    Student           Student      @relation(fields: [student_id], references: [student_id], onDelete: Cascade, onUpdate: Cascade)
    academic_year_id  String       @db.VarChar(36)
    AcademicYear      AcademicYear @relation(fields: [academic_year_id], references: [academic_year_id], onDelete: Cascade, onUpdate: Cascade)
}

model AnnualRegistry {
    annual_registry_id String             @id @default(uuid()) @db.VarChar(36)
    is_deleted         Boolean            @default(false) @db.TinyInt
    matricule          String             @db.VarChar(75)
    private_code       String             @db.VarChar(75)
    academic_year_id   String             @db.VarChar(36)
    AcademicYear       AcademicYear       @relation(fields: [academic_year_id], references: [academic_year_id], onDelete: Cascade, onUpdate: Cascade)
    added_by           String
    AnnualConfigurator AnnualConfigurator @relation(fields: [added_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)
    login_id           String
    Login              Login              @relation(fields: [login_id], references: [login_id], onDelete: Cascade, onUpdate: Cascade)

    AnnualRegistryAudits                AnnualRegistryAudit[]
    AnnualCarryOverSytemAudits          AnnualCarryOverSytemAudit[]
    AnnualMinimumModulationScore        AnnualMinimumModulationScore[]
    AnnualMinimumModulationScoreAudits  AnnualMinimumModulationScoreAudit[]
    AnnualEvaluationTypeWeightingAudits AnnualEvaluationTypeWeightingAudit[]
    AnnualWeightings                    AnnualWeighting[]
    AnnualWeightingAudits               AnnualWeightingAudit[]
    AnnualGradeWeightings               AnnualGradeWeighting[]
    AnnualGradeWeightingAudits          AnnualGradeWeightingAudit[]
    AnnualAcademicProfiles              AnnualAcademicProfile[]
    AnnualAcademicProfileAudits         AnnualAcademicProfileAudit[]
    AnnualSemesterExamAcessAudits       AnnualSemesterExamAcessAudit[]
    AnnualEvaluationTypeWeightings      AnnualEvaluationTypeWeighting[]

    @@unique([login_id, matricule])
    @@unique([login_id, academic_year_id])
}

model AnnualRegistryAudit {
    annual_registry_audit_id String             @id @default(uuid()) @db.VarChar(36)
    private_code             String             @db.VarChar(75)
    is_deleted               Boolean            @db.TinyInt
    annual_registry_id       String             @db.VarChar(36)
    AnnualRegistry           AnnualRegistry     @relation(fields: [annual_registry_id], references: [annual_registry_id], onDelete: Cascade, onUpdate: Cascade)
    audited_by               String             @db.VarChar(36)
    AnnualConfigurator       AnnualConfigurator @relation(fields: [audited_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)
}

model TeacherType {
    teacher_type_id String   @id @default(uuid()) @db.VarChar(36)
    teacher_type    String
    created_at      DateTime @default(now()) @db.DateTime(0)

    Teachers      Teacher[]
    TeacherAudits TeacherAudit[]
}

model TeachingGrade {
    teaching_grade_id String   @id @default(uuid()) @db.VarChar(36)
    teaching_grade    String //professeur de classe C, professeur de class D, Maitre des conferences, charge de cours, assistant
    created_at        DateTime @default(now()) @db.DateTime(0)

    AnnualTeachers AnnualTeacher[]
}

model Teacher {
    teacher_id            String      @id @default(uuid()) @db.VarChar(36)
    has_tax_payers_card   Boolean     @default(false)
    tax_payer_card_number String?
    matricule             String      @unique @db.VarChar(75)
    private_code          String      @db.VarChar(75)
    teacher_type_id       String      @db.VarChar(36)
    TeacherType           TeacherType @relation(fields: [teacher_type_id], references: [teacher_type_id], onDelete: Cascade, onUpdate: Cascade)

    AnnualTeachers AnnualTeacher[]
    TeacherAudits  TeacherAudit[]
}

model TeacherAudit {
    teacher_audit_id      String             @id @default(uuid()) @db.VarChar(36)
    has_tax_payers_card   Boolean            @default(false)
    tax_payer_card_number String?
    private_code          String             @db.VarChar(75)
    teacher_type_id       String             @db.VarChar(36)
    TeacherType           TeacherType        @relation(fields: [teacher_type_id], references: [teacher_type_id], onDelete: Cascade, onUpdate: Cascade)
    teacher_id            String             @db.VarChar(36)
    Teacher               Teacher            @relation(fields: [teacher_id], references: [teacher_id], onDelete: Cascade, onUpdate: Cascade)
    audited_by            String             @db.VarChar(36)
    AnnualConfigurator    AnnualConfigurator @relation(fields: [audited_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)
}

model AnnualTeacher {
    annual_teacher_id     String             @id @default(uuid()) @db.VarChar(36)
    hourly_rate           Int
    origin_institute      String             @db.VarChar(45)
    has_signed_convention Boolean            @default(false) @db.TinyInt
    is_deleted            Boolean            @default(false) @db.TinyInt
    created_at            DateTime           @default(now()) @db.DateTime(0)
    teaching_grade_id     String             @db.VarChar(36)
    TeachingGrade         TeachingGrade      @relation(fields: [teaching_grade_id], references: [teaching_grade_id], onDelete: Cascade, onUpdate: Cascade)
    academic_year_id      String             @db.VarChar(36)
    AcademicYear          AcademicYear       @relation(fields: [academic_year_id], references: [academic_year_id], onDelete: Cascade, onUpdate: Cascade)
    teacher_id            String             @db.VarChar(36)
    Teacher               Teacher            @relation(fields: [teacher_id], references: [teacher_id], onDelete: Cascade, onUpdate: Cascade)
    login_id              String             @db.VarChar(36)
    Login                 Login              @relation(fields: [login_id], references: [login_id], onDelete: Cascade, onUpdate: Cascade)
    created_by            String             @db.VarChar(36)
    AnnualConfigurator    AnnualConfigurator @relation(fields: [created_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)

    AnnualTeacherAudits                         AnnualTeacherAudit[]
    AnnualClassroomDivision                     AnnualClassroomDivision[]
    AnnualClassroomDivisionAudits               AnnualClassroomDivisionAudit[]
    AnnualCreditUnits                           AnnualCreditUnit[]
    AnnualCreditUnitAudits                      AnnualCreditUnitAudit[]
    AnnualCreditUnitHasSubjects                 AnnualCreditUnitSubject[]
    AnnualCreditUnitHasSubjectAudits            AnnualCreditUnitSubjectAudit[]
    AnnualCreditHasSubjectParts                 AnnualCreditUnitHasSubjectPart[]      @relation(name: "AnnualTeacher")
    CreatedAnnualCreditUnitHasSubjectParts      AnnualCreditUnitHasSubjectPart[]      @relation(name: "CreatedBy_AnnualTeacher")
    AnnualCreditHasSubjectPartAudits            AnnualCreditUnitHasSubjectPartAudit[] @relation(name: "AnnualTeacher")
    AuditedAnnualCreditUnitHasSubjectPartAudits AnnualCreditUnitHasSubjectPartAudit[] @relation(name: "AuditedBy_AnnualTeacher")

    @@unique([login_id, academic_year_id])
}

model AnnualTeacherAudit {
    annual_teacher_audit_id String             @id @default(uuid()) @db.VarChar(36)
    hourly_rate             Int
    origin_institute        String             @db.VarChar(45)
    has_signed_convention   Boolean            @default(false) @db.TinyInt
    is_deleted              Boolean            @default(false) @db.TinyInt
    audited_at              DateTime           @default(now()) @db.DateTime(0)
    audited_by              String             @db.VarChar(36)
    AnnualConfigurator      AnnualConfigurator @relation(fields: [audited_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)
    annual_teacher_id       String             @db.VarChar(36)
    AnnualTeacher           AnnualTeacher      @relation(fields: [annual_teacher_id], references: [annual_teacher_id], onDelete: Cascade, onUpdate: Cascade)
}

enum AuthMethod {
    LOCAL
    GOOGLE

    @@map("auth_method_enum")
}

model Log {
    log_id        String     @id @default(uuid()) @db.VarChar(36)
    auth_method   AuthMethod @default(LOCAL)
    logged_in_at  DateTime   @default(now()) @db.DateTime(0)
    logged_out_at DateTime?  @db.DateTime(0)
    closed_at     DateTime?  @db.DateTime(0)
    login_id      String     @db.VarChar(36)
    Login         Login      @relation(fields: [login_id], references: [login_id], onDelete: Cascade, onUpdate: Cascade)
}

model ResetPassword {
    reset_password_id          String              @id @default(uuid()) @db.VarChar(36)
    expires_at                 DateTime            @db.DateTime(0)
    is_valid                   Boolean             @default(true) @db.TinyInt
    login_id                   String              @db.VarChar(36)
    Login                      Login               @relation(fields: [login_id], references: [login_id], onDelete: Cascade, onUpdate: Cascade)
    generated_by_confiigurator String?             @db.VarChar(36)
    AnnualConfigurator         AnnualConfigurator? @relation(fields: [generated_by_confiigurator], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)
    generated_by_admin         String?             @db.VarChar(36)
    Admin                      Login?              @relation("Admin_Generated_ResetPassword", fields: [generated_by_admin], references: [login_id], onDelete: Cascade, onUpdate: Cascade)
}

model Department {
    department_id      String             @id @default(uuid()) @db.VarChar(36)
    department_name    String             @db.VarChar(45)
    department_code    String             @unique @db.VarChar(45)
    department_acronym String             @db.VarChar(45)
    is_deleted         Boolean            @default(false) @db.TinyInt
    created_at         DateTime           @default(now()) @db.DateTime(0)
    created_by         String             @db.VarChar(36)
    AnnualConfigurator AnnualConfigurator @relation(fields: [created_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)
    school_id          String             @db.VarChar(36)
    School             School             @relation(fields: [school_id], references: [school_id], onDelete: Cascade, onUpdate: Cascade)

    DepartmentAudits  DepartmentAudit[]
    AnnualMajors      AnnualMajor[]
    AnnualMajorAudits AnnualMajorAudit[]
}

model DepartmentAudit {
    departement_audit_id String             @id @default(uuid()) @db.VarChar(36)
    department_name      String             @db.VarChar(45)
    is_deleted           Boolean            @db.TinyInt
    audited_at           DateTime           @default(now()) @db.DateTime(0)
    department_id        String             @db.VarChar(36)
    Department           Department         @relation(fields: [department_id], references: [department_id], onDelete: Cascade, onUpdate: Cascade)
    audited_by           String             @db.VarChar(36)
    AnnualConfigurator   AnnualConfigurator @relation(fields: [audited_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)
}

enum CycleType {
    SHORT
    LONG

    @@map("cycle_type_enum")
}

enum CycleName {
    BTS
    DUT
    DTS
    BACHELOR
    MASTER
    DOCTORAT

    @@map("cycle_name_enum")
}

model Cycle {
    cycle_id        String    @id @default(uuid()) @db.VarChar(36)
    cycle_name      CycleName
    cycle_type      CycleType
    number_of_years Int
    created_at      DateTime  @default(now()) @db.DateTime(0)

    Majors                         Major[]
    MajorAudits                    MajorAudit[]
    AnnualMinimumModulationScores  AnnualMinimumModulationScore[]
    AnnualWeightings               AnnualWeighting[]
    AnnualGradeWeightings          AnnualGradeWeighting[]
    AnnualEvaluationTypeWeightings AnnualEvaluationTypeWeighting[]
}

model Major {
    major_id           String             @id @default(uuid()) @db.VarChar(36)
    major_name         String             @db.VarChar(45)
    major_code         String             @unique @db.VarChar(45)
    major_acronym      String             @db.VarChar(45)
    created_at         DateTime           @default(now()) @db.DateTime(0)
    cycle_id           String             @db.VarChar(36)
    Cycle              Cycle              @relation(fields: [cycle_id], references: [cycle_id], onDelete: Cascade, onUpdate: Cascade)
    created_by         String             @db.VarChar(36)
    AnnualConfigurator AnnualConfigurator @relation(fields: [created_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)

    MajorAudits       MajorAudit[]
    AnnualMajors      AnnualMajor[]
    Classrooms        Classroom[]
    AnnualCreditUnits AnnualCreditUnit[]
}

model MajorAudit {
    major_audit_id     String             @id @default(uuid()) @db.VarChar(36)
    major_name         String             @db.VarChar(45)
    major_code         String             @unique @db.VarChar(45)
    major_acronym      String             @db.VarChar(45)
    created_at         DateTime           @default(now()) @db.DateTime(0)
    major_id           String             @db.VarChar(36)
    Major              Major              @relation(fields: [major_id], references: [major_id], onDelete: Cascade, onUpdate: Cascade)
    cycle_id           String             @db.VarChar(36)
    Cycle              Cycle              @relation(fields: [cycle_id], references: [cycle_id], onDelete: Cascade, onUpdate: Cascade)
    audited_by         String             @db.VarChar(36)
    AnnualConfigurator AnnualConfigurator @relation(fields: [audited_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)
}

model AnnualMajor {
    annual_major_id    String             @id @default(uuid()) @db.VarChar(36)
    major_name         String             @db.VarChar(45)
    major_code         String             @db.VarChar(45)
    major_acronym      String             @db.VarChar(45)
    is_deleted         Boolean            @default(false) @db.TinyInt
    created_at         DateTime           @default(now()) @db.DateTime(0)
    major_id           String             @db.VarChar(36)
    Major              Major              @relation(fields: [major_id], references: [major_id], onDelete: Cascade, onUpdate: Cascade)
    department_id      String             @db.VarChar(36)
    Department         Department         @relation(fields: [department_id], references: [department_id], onDelete: Cascade, onUpdate: Cascade)
    academic_year_id   String             @db.VarChar(36)
    AcademicYear       AcademicYear       @relation(fields: [academic_year_id], references: [academic_year_id], onDelete: Cascade, onUpdate: Cascade)
    created_by         String             @db.VarChar(36)
    AnnualConfigurator AnnualConfigurator @relation(fields: [created_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)

    AnnualMajorAudits AnnualMajorAudit[]

    @@unique([major_code, academic_year_id])
}

model AnnualMajorAudit {
    annual_major_audit_id String             @id @default(uuid()) @db.VarChar(36)
    major_name            String             @db.VarChar(45)
    major_code            String             @db.VarChar(45)
    major_acronym         String             @db.VarChar(45)
    is_deleted            Boolean            @db.TinyInt
    audited_at            DateTime           @default(now()) @db.DateTime(0)
    annual_major_id       String             @db.VarChar(36)
    AnnualMajor           AnnualMajor        @relation(fields: [annual_major_id], references: [annual_major_id], onDelete: Cascade, onUpdate: Cascade)
    department_id         String             @db.VarChar(36)
    Department            Department         @relation(fields: [department_id], references: [department_id], onDelete: Cascade, onUpdate: Cascade)
    audited_by            String             @db.VarChar(36)
    AnnualConfigurator    AnnualConfigurator @relation(fields: [audited_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)
}

model Classroom {
    classroom_id       String             @id @default(uuid()) @db.VarChar(36)
    classroom_name     String             @db.VarChar(45)
    classroom_code     String             @unique @db.VarChar(45)
    classroom_acronym  String             @db.VarChar(45)
    major_id           String             @db.VarChar(36)
    Major              Major              @relation(fields: [major_id], references: [major_id], onDelete: Cascade, onUpdate: Cascade)
    created_at         DateTime           @default(now()) @db.DateTime(0)
    level              Int
    created_by         String             @db.VarChar(36)
    AnnualConfigurator AnnualConfigurator @relation(fields: [created_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)

    Students         Student[]
    AnnualClassrooms AnnualClassroom[]
}

model AnnualClassroom {
    annual_classroom_id String       @id @default(uuid()) @db.VarChar(36)
    total_fee_due       Int
    registration_fee    Int
    classroom_name      String       @db.VarChar(45)
    classroom_code      String       @db.VarChar(45)
    classroom_acronym   String       @db.VarChar(45)
    is_deleted          Boolean      @default(false) @db.TinyInt
    created_at          DateTime     @default(now()) @db.DateTime(0)
    classroom_id        String       @db.VarChar(36)
    Classroom           Classroom    @relation(fields: [classroom_id], references: [classroom_id], onDelete: Cascade, onUpdate: Cascade)
    academic_year_id    String       @db.VarChar(36)
    AcademicYear        AcademicYear @relation(fields: [academic_year_id], references: [academic_year_id], onDelete: Cascade, onUpdate: Cascade)

    AnnualClassroomAudits    AnnualClassroomAudit[]
    AnnualClassroomDivisions AnnualClassroomDivision[]

    @@unique([classroom_code, academic_year_id])
}

model AnnualClassroomAudit {
    annual_classroom_audit_id String             @id @default(uuid()) @db.VarChar(36)
    total_fee_due             Int
    registration_fee          Int
    is_deleted                Boolean            @db.TinyInt
    audited_at                DateTime           @default(now()) @db.DateTime(0)
    annual_classroom_id       String             @db.VarChar(36)
    AnnualClassroom           AnnualClassroom    @relation(fields: [annual_classroom_id], references: [annual_classroom_id], onDelete: Cascade, onUpdate: Cascade)
    audited_by                String             @db.VarChar(36)
    AnnualConfigurator        AnnualConfigurator @relation(fields: [audited_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)
}

model AnnualClassroomDivision {
    annual_classroom_division_id String             @id @default(uuid()) @db.VarChar(36)
    division_letter              String             @db.Char(1)
    created_at                   DateTime           @default(now()) @db.DateTime(0)
    is_deleted                   Boolean            @default(false) @db.TinyInt
    annual_classroom_id          String             @db.VarChar(36)
    AnnualClassroom              AnnualClassroom    @relation(fields: [annual_classroom_id], references: [annual_classroom_id], onDelete: Cascade, onUpdate: Cascade)
    created_by                   String             @db.VarChar(36)
    AnnualConfigurator           AnnualConfigurator @relation(fields: [created_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)
    annual_coordinator_id        String?            @db.VarChar(36)
    AnnualTeacher                AnnualTeacher?     @relation(fields: [annual_coordinator_id], references: [annual_teacher_id], onDelete: Cascade, onUpdate: Cascade)

    AnnualClassroomDivisionAudits AnnualClassroomDivisionAudit[]
}

model AnnualClassroomDivisionAudit {
    annual_classroom_division_audit_id String                  @id @default(uuid()) @db.VarChar(36)
    is_deleted                         Boolean                 @db.TinyInt
    audited_at                         DateTime                @default(now()) @db.DateTime(0)
    annual_coordinator_id              String?                 @db.VarChar(36)
    AnnualTeacher                      AnnualTeacher?          @relation(fields: [annual_coordinator_id], references: [annual_teacher_id], onDelete: Cascade, onUpdate: Cascade)
    annual_classroom_division_id       String                  @db.VarChar(36)
    AnnualClassroomDivision            AnnualClassroomDivision @relation(fields: [annual_classroom_division_id], references: [annual_classroom_division_id], onDelete: Cascade, onUpdate: Cascade)
    audited_by                         String                  @db.VarChar(36)
    AnnualConfigurator                 AnnualConfigurator      @relation(fields: [audited_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)
}

model AnnualCreditUnit {
    annual_credit_unit_id String        @id @default(uuid()) @db.VarChar(36)
    credit_unit_code      String        @db.VarChar(45)
    credit_unit_name      String        @db.VarChar(45)
    credit_points         Int
    semester_number       Int
    is_deleted            Boolean       @default(false) @db.TinyInt
    created_at            DateTime      @default(now()) @db.DateTime(0)
    major_id              String        @db.VarChar(36)
    Major                 Major         @relation(fields: [major_id], references: [major_id], onDelete: Cascade, onUpdate: Cascade)
    academic_year_id      String        @db.VarChar(36)
    AcademicYear          AcademicYear  @relation(fields: [academic_year_id], references: [academic_year_id], onDelete: Cascade, onUpdate: Cascade)
    created_by            String        @db.VarChar(36)
    AnnualTeacher         AnnualTeacher @relation(fields: [created_by], references: [annual_teacher_id], onDelete: Cascade, onUpdate: Cascade)

    AnnualCreditUnitAudits      AnnualCreditUnitAudit[]
    AnnualCreditUnitHasSubjects AnnualCreditUnitSubject[]
}

model AnnualCreditUnitAudit {
    annual_credit_unit_audit_id String           @id @default(uuid()) @db.VarChar(36)
    credit_unit_code            String           @db.VarChar(45)
    credit_unit_name            String           @db.VarChar(45)
    credit_points               Int
    semester_number             Int
    is_deleted                  Boolean          @db.TinyInt
    audited_at                  DateTime         @default(now()) @db.DateTime(0)
    annual_credit_unit_id       String           @db.VarChar(36)
    AnnualCreditUnit            AnnualCreditUnit @relation(fields: [annual_credit_unit_id], references: [annual_credit_unit_id], onDelete: Cascade, onUpdate: Cascade)
    audited_by                  String           @db.VarChar(36)
    AnnualTeacher               AnnualTeacher    @relation(fields: [audited_by], references: [annual_teacher_id], onDelete: Cascade, onUpdate: Cascade)
}

model SubjectPart {
    subject_part_id   String   @id @default(uuid()) @db.VarChar(36)
    subject_part_name String   @db.VarChar(45)
    created_at        DateTime @default(now()) @db.DateTime(0)

    AnnualCreditHasSubjectParts AnnualCreditUnitHasSubjectPart[]
}

model AnnualCreditUnitSubject {
    annual_credit_unit_subject_id String           @id @default(uuid()) @db.VarChar(36)
    weighting                     Decimal
    objective                     String           @db.MediumText
    subject_code                  String           @db.VarChar(45)
    subject_title                 String           @db.VarChar(45)
    is_deleted                    Boolean          @default(false) @db.TinyInt
    created_at                    DateTime         @default(now()) @db.DateTime(0)
    annual_credit_unit_id         String           @db.VarChar(36)
    AnnualCreditUnit              AnnualCreditUnit @relation(fields: [annual_credit_unit_id], references: [annual_credit_unit_id], onDelete: Cascade, onUpdate: Cascade)
    created_by                    String           @db.VarChar(36)
    AnnualTeacher                 AnnualTeacher    @relation(fields: [created_by], references: [annual_teacher_id], onDelete: Cascade, onUpdate: Cascade)

    AnnualCreditUnitSubjectAudits   AnnualCreditUnitSubjectAudit[]
    AnnualCreditUnitHasSubjectParts AnnualCreditUnitHasSubjectPart[]
}

model AnnualCreditUnitSubjectAudit {
    annual_credit_unit_subject_audit_id String                  @id @default(uuid()) @db.VarChar(36)
    weighting                           Decimal
    objective                           String                  @db.MediumText
    subject_code                        String                  @db.VarChar(45)
    subject_title                       String                  @db.VarChar(45)
    is_deleted                          Boolean                 @db.TinyInt
    audited_at                          DateTime                @default(now()) @db.DateTime(0)
    audited_by                          String                  @db.VarChar(36)
    AnnualTeacher                       AnnualTeacher           @relation(fields: [audited_by], references: [annual_teacher_id], onDelete: Cascade, onUpdate: Cascade)
    annual_credit_unit_subject_id       String                  @db.VarChar(36)
    AnnualCreditUnit                    AnnualCreditUnitSubject @relation(fields: [annual_credit_unit_subject_id], references: [annual_credit_unit_subject_id], onDelete: Cascade, onUpdate: Cascade)
}

model AnnualCreditUnitHasSubjectPart {
    annual_credit_unit_has_subject_part_id String                  @id @default(uuid()) @db.VarChar(36)
    number_of_hours                        Int
    created_at                             DateTime                @default(now()) @db.DateTime(0)
    subject_part_id                        String                  @db.VarChar(36)
    SubjectPart                            SubjectPart             @relation(fields: [subject_part_id], references: [subject_part_id], onDelete: Cascade, onUpdate: Cascade)
    annual_credit_unit_subject_id          String                  @db.VarChar(36)
    AnnualCreditUnit                       AnnualCreditUnitSubject @relation(fields: [annual_credit_unit_subject_id], references: [annual_credit_unit_subject_id], onDelete: Cascade, onUpdate: Cascade)
    annual_teacher_id                      String                  @db.VarChar(36)
    AnnualTeacher                          AnnualTeacher           @relation(name: "AnnualTeacher", fields: [annual_teacher_id], references: [annual_teacher_id], onDelete: Cascade, onUpdate: Cascade)
    created_by                             String                  @db.VarChar(36)
    AnnualTeacherCreator                   AnnualTeacher           @relation(name: "CreatedBy_AnnualTeacher", fields: [created_by], references: [annual_teacher_id], onDelete: Cascade, onUpdate: Cascade)

    AnnualCreditHasSubjectPartAudits AnnualCreditUnitHasSubjectPartAudit[]
}

model AnnualCreditUnitHasSubjectPartAudit {
    annual_credit_unit_has_subject_part_audit_id String                         @id @default(uuid()) @db.VarChar(36)
    number_of_hours                              Int
    audited_at                                   DateTime                       @default(now()) @db.DateTime(0)
    annual_credit_unit_has_subject_part_id       String                         @db.VarChar(36)
    AnnualCreditHasSubjectPart                   AnnualCreditUnitHasSubjectPart @relation(fields: [annual_credit_unit_has_subject_part_id], references: [annual_credit_unit_has_subject_part_id], onDelete: Cascade, onUpdate: Cascade)
    annual_teacher_id                            String                         @db.VarChar(36)
    AnnualTeacher                                AnnualTeacher                  @relation(name: "AnnualTeacher", fields: [annual_teacher_id], references: [annual_teacher_id], onDelete: Cascade, onUpdate: Cascade)
    audited_by                                   String                         @db.VarChar(36)
    AnnualTeacherAuditer                         AnnualTeacher                  @relation(name: "AuditedBy_AnnualTeacher", fields: [audited_by], references: [annual_teacher_id], onDelete: Cascade, onUpdate: Cascade)
}

enum CarryOverSystemEnum {
    SUBJECT
    CREDIT_UNIT

    @@map("carry_over_system_enum")
}

model AnnualCarryOverSytem {
    annual_carry_over_system_id String              @id @default(uuid()) @db.VarChar(36)
    carry_over_system           CarryOverSystemEnum
    created_at                  DateTime            @default(now()) @db.DateTime(0)
    academic_year_id            String              @unique @db.VarChar(36)
    AcademicYear                AcademicYear        @relation(fields: [academic_year_id], references: [academic_year_id], onDelete: Cascade, onUpdate: Cascade)
    created_by                  String              @db.VarChar(36)
    AnnualConfigurator          AnnualConfigurator  @relation(fields: [created_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)

    AnnualCarryOverSytemAudits AnnualCarryOverSytemAudit[]
}

model AnnualCarryOverSytemAudit {
    annual_carry_over_system_audit_id String               @id @default(uuid()) @db.VarChar(36)
    carry_over_system                 CarryOverSystemEnum
    audited_at                        DateTime             @default(now()) @db.DateTime(0)
    annual_carry_over_system_id       String               @db.VarChar(36)
    AnnualCarryOverSystem             AnnualCarryOverSytem @relation(fields: [annual_carry_over_system_id], references: [annual_carry_over_system_id], onDelete: Cascade, onUpdate: Cascade)
    audited_by                        String               @db.VarChar(36)
    AnnualRegistry                    AnnualRegistry       @relation(fields: [audited_by], references: [annual_registry_id], onDelete: Cascade, onUpdate: Cascade)
}

model AnnualMinimumModulationScore {
    annual_minimummodulation_score_id String         @id @default(uuid()) @db.VarChar(36)
    score                             Int
    configured_at                     DateTime       @default(now()) @db.DateTime(0)
    cycle_id                          String         @db.VarChar(36)
    Cycle                             Cycle          @relation(fields: [cycle_id], references: [cycle_id], onDelete: Cascade, onUpdate: Cascade)
    academic_year_id                  String         @db.VarChar(36)
    AcademicYear                      AcademicYear   @relation(fields: [academic_year_id], references: [academic_year_id], onDelete: Cascade, onUpdate: Cascade)
    configured_by                     String         @db.VarChar(36)
    AnnualRegistry                    AnnualRegistry @relation(fields: [configured_by], references: [annual_registry_id], onDelete: Cascade, onUpdate: Cascade)

    AnnualMinimumModulationScoreAudits AnnualMinimumModulationScoreAudit[]

    @@unique([academic_year_id, cycle_id])
}

model AnnualMinimumModulationScoreAudit {
    annual_minimummodulation_score_audit_id String                       @id @default(uuid()) @db.VarChar(36)
    score                                   Int
    audited_at                              DateTime                     @default(now()) @db.DateTime(0)
    annual_minimummodulation_score_id       String                       @db.VarChar(36)
    AnnualMinimumModulationScore            AnnualMinimumModulationScore @relation(fields: [annual_minimummodulation_score_id], references: [annual_minimummodulation_score_id], onDelete: Cascade, onUpdate: Cascade)
    configured_by                           String                       @db.VarChar(36)
    AnnualRegistry                          AnnualRegistry               @relation(fields: [configured_by], references: [annual_registry_id], onDelete: Cascade, onUpdate: Cascade)
}

enum EvaluationTypeEnum {
    CA
    EXAM

    @@map("evaluation_type_enum")
}

model EvaluationType {
    evaluation_type_id String             @id @default(uuid()) @db.VarChar(36)
    evaluation_type    EvaluationTypeEnum
    created_at         DateTime           @default(now()) @db.DateTime(0)

    AnnualEvaluationTypeWeightings AnnualEvaluationTypeWeighting[]
    AnnualEvaluationSubTypes       AnnualEvaluationSubType[]
}

model AnnualEvaluationTypeWeighting {
    annual_evaluation_type_weighting_id String         @id @default(uuid()) @db.VarChar(36)
    weight                              Int
    created_at                          DateTime       @default(now()) @db.DateTime(0)
    cycle_id                            String         @db.VarChar(36)
    Cycle                               Cycle          @relation(fields: [cycle_id], references: [cycle_id], onDelete: Cascade, onUpdate: Cascade)
    academic_year_id                    String         @db.VarChar(36)
    AcademicYear                        AcademicYear   @relation(fields: [academic_year_id], references: [academic_year_id], onDelete: Cascade, onUpdate: Cascade)
    evaluation_type_id                  String         @db.VarChar(36)
    EvaluationType                      EvaluationType @relation(fields: [evaluation_type_id], references: [evaluation_type_id], onDelete: Cascade, onUpdate: Cascade)
    created_by                          String         @db.VarChar(36)
    AnnualRegistry                      AnnualRegistry @relation(fields: [created_by], references: [annual_registry_id], onDelete: Cascade, onUpdate: Cascade)

    AnnualEvaluationTypeWeightingAudits AnnualEvaluationTypeWeightingAudit[]

    @@unique([academic_year_id, evaluation_type_id, cycle_id])
}

model AnnualEvaluationTypeWeightingAudit {
    annual_evaluation_type_weighting_audit_id String                        @id @default(uuid()) @db.VarChar(36)
    weight                                    Int
    audited_at                                DateTime                      @default(now()) @db.DateTime(0)
    annual_evaluation_type_weighting_id       String                        @db.VarChar(36)
    AnnualEvaluationTypeWeighting             AnnualEvaluationTypeWeighting @relation(fields: [annual_evaluation_type_weighting_id], references: [annual_evaluation_type_weighting_id], onDelete: Cascade, onUpdate: Cascade)
    audited_by                                String                        @db.VarChar(36)
    AnnualRegistry                            AnnualRegistry                @relation(fields: [audited_by], references: [annual_registry_id], onDelete: Cascade, onUpdate: Cascade)
}

model AnnualEvaluationSubType {
    annual_evaluation_sub_type_id String         @id @default(uuid()) @db.VarChar(36)
    evaluation_sub_type_name      String         @db.VarChar(45)
    evaluation_sub_type_weight    Int
    academic_year_id              String         @db.VarChar(36)
    AcademicYear                  AcademicYear   @relation(fields: [academic_year_id], references: [academic_year_id], onDelete: Cascade, onUpdate: Cascade)
    evaluation_type_id            String         @db.VarChar(36)
    EvaluationType                EvaluationType @relation(fields: [evaluation_type_id], references: [evaluation_type_id], onDelete: Cascade, onUpdate: Cascade)

    AnnualEvaluationSubTypeAudits AnnualEvaluationSubTypeAudit[]
}

model AnnualEvaluationSubTypeAudit {
    annual_evaluation_sub_type_audit_id String                  @id @default(uuid()) @db.VarChar(36)
    evaluation_sub_type_name            String                  @db.VarChar(45)
    evaluation_sub_type_weight          Int
    annual_evaluation_sub_type_id       String                  @db.VarChar(36)
    AnnualEvaluationSubType             AnnualEvaluationSubType @relation(fields: [annual_evaluation_sub_type_id], references: [annual_evaluation_sub_type_id], onDelete: Cascade, onUpdate: Cascade)
}

model AnnualWeighting {
    annual_weighting_id String         @id @default(uuid()) @db.VarChar(36)
    weighting_system    Int
    configured_at       DateTime       @default(now()) @db.DateTime(0)
    academic_year_id    String         @db.VarChar(36)
    AcademicYear        AcademicYear   @relation(fields: [academic_year_id], references: [academic_year_id], onDelete: Cascade, onUpdate: Cascade)
    cycle_id            String         @db.VarChar(36)
    Cycle               Cycle          @relation(fields: [cycle_id], references: [cycle_id], onDelete: Cascade, onUpdate: Cascade)
    configured_by       String         @db.VarChar(36)
    AnnualRegistry      AnnualRegistry @relation(fields: [configured_by], references: [annual_registry_id], onDelete: Cascade, onUpdate: Cascade)

    AnnualWeightingAudits AnnualWeightingAudit[]

    @@unique([academic_year_id, cycle_id])
}

model AnnualWeightingAudit {
    annual_weighting_audit_id String          @id @default(uuid()) @db.VarChar(36)
    weighting_system          Int
    audited_at                DateTime        @default(now()) @db.DateTime(0)
    annual_weighting_id       String          @db.VarChar(36)
    AnnualWeighting           AnnualWeighting @relation(fields: [annual_weighting_id], references: [annual_weighting_id], onDelete: Cascade, onUpdate: Cascade)
    audited_by                String          @db.VarChar(36)
    AnnualRegistry            AnnualRegistry  @relation(fields: [audited_by], references: [annual_registry_id], onDelete: Cascade, onUpdate: Cascade)
}

model Grade {
    grade_id                   String                      @id @default(uuid()) @db.VarChar(36)
    grade_value                String                      @db.VarChar(5)
    created_at                 DateTime                    @default(now()) @db.DateTime(0)
    AnnualGradeWeightings      AnnualGradeWeighting[]
    AnnualGradeWeightingAudits AnnualGradeWeightingAudit[]
}

model AnnualGradeWeighting {
    annual_grade_weighting_id String         @id @default(uuid()) @db.VarChar(36)
    minimum                   Int
    maximum                   Int
    point                     Int
    observation               String         @db.MediumText
    is_deleted                Boolean        @default(false) @db.TinyInt
    created_at                DateTime       @default(now()) @db.DateTime(0)
    academic_year_id          String         @db.VarChar(36)
    AcademicYear              AcademicYear   @relation(fields: [academic_year_id], references: [academic_year_id], onDelete: Cascade, onUpdate: Cascade)
    cycle_id                  String         @db.VarChar(36)
    Cycle                     Cycle          @relation(fields: [cycle_id], references: [cycle_id], onDelete: Cascade, onUpdate: Cascade)
    grade_id                  String         @db.VarChar(36)
    Grade                     Grade          @relation(fields: [grade_id], references: [grade_id], onDelete: Cascade, onUpdate: Cascade)
    created_by                String         @db.VarChar(36)
    AnnualRegistry            AnnualRegistry @relation(fields: [created_by], references: [annual_registry_id], onDelete: Cascade, onUpdate: Cascade)

    AnnualGradeWeightingAudits AnnualGradeWeightingAudit[]
}

model AnnualGradeWeightingAudit {
    annual_grade_weighting_audit_id String               @id @default(uuid()) @db.VarChar(36)
    minimum                         Int
    maximum                         Int
    point                           Int
    observation                     String               @db.MediumText
    is_deleted                      Boolean              @db.TinyInt
    audited_at                      DateTime             @default(now()) @db.DateTime(0)
    annual_grade_weighting_id       String               @db.VarChar(36)
    AnnualGradeWeighting            AnnualGradeWeighting @relation(fields: [annual_grade_weighting_id], references: [annual_grade_weighting_id], onDelete: Cascade, onUpdate: Cascade)
    grade_id                        String               @db.VarChar(36)
    Grade                           Grade                @relation(fields: [grade_id], references: [grade_id], onDelete: Cascade, onUpdate: Cascade)
    audited_by                      String               @db.VarChar(36)
    AnnualRegistry                  AnnualRegistry       @relation(fields: [audited_by], references: [annual_registry_id], onDelete: Cascade, onUpdate: Cascade)
}

model AnnualAcademicProfile {
    annual_academic_profile_id String         @id @default(uuid()) @db.VarChar(36)
    minimum_score              Int
    maximum_score              Int
    comment                    String         @db.VarChar(25)
    is_deleted                 Boolean        @default(false) @db.TinyInt
    configured_at              DateTime       @default(now()) @db.DateTime(0)
    academic_year_id           String         @db.VarChar(36)
    AcademicYear               AcademicYear   @relation(fields: [academic_year_id], references: [academic_year_id], onDelete: Cascade, onUpdate: Cascade)
    configured_by              String         @db.VarChar(36)
    AnnualRegistry             AnnualRegistry @relation(fields: [configured_by], references: [annual_registry_id], onDelete: Cascade, onUpdate: Cascade)

    AnnualAcademicProfileAudits AnnualAcademicProfileAudit[]
}

model AnnualAcademicProfileAudit {
    annual_academic_profile_audit_id String                @id @default(uuid()) @db.VarChar(36)
    minimum_score                    Int
    maximum_score                    Int
    comment                          String                @db.VarChar(25)
    is_deleted                       Boolean               @db.TinyInt
    audited_at                       DateTime              @default(now()) @db.DateTime(0)
    annual_academic_profile_id       String                @db.VarChar(36)
    AnnualAcademicProfile            AnnualAcademicProfile @relation(fields: [annual_academic_profile_id], references: [annual_academic_profile_id], onDelete: Cascade, onUpdate: Cascade)
    audited_by                       String                @db.VarChar(36)
    AnnualRegistry                   AnnualRegistry        @relation(fields: [audited_by], references: [annual_registry_id], onDelete: Cascade, onUpdate: Cascade)
}

model AnnualSemesterExamAcess {
    annual_semester_exam_access_id String             @id @default(uuid()) @db.VarChar(36)
    payment_percentage             Int
    annual_semester_number         Int
    configured_at                  DateTime           @default(now()) @db.DateTime(0)
    academic_year_id               String             @db.VarChar(36)
    AcademicYear                   AcademicYear       @relation(fields: [academic_year_id], references: [academic_year_id], onDelete: Cascade, onUpdate: Cascade)
    configured_by                  String             @db.VarChar(36)
    AnnualConfigurator             AnnualConfigurator @relation(fields: [configured_by], references: [annual_configurator_id], onDelete: Cascade, onUpdate: Cascade)

    AnnualSemesterExamAcessAudits AnnualSemesterExamAcessAudit[]

    @@unique([academic_year_id, annual_semester_number])
}

model AnnualSemesterExamAcessAudit {
    annual_semester_exam_access_audit_id String                  @id @default(uuid()) @db.VarChar(36)
    payment_percentage                   Int
    annual_semester_number               Int
    audited_at                           DateTime                @default(now()) @db.DateTime(0)
    annual_semester_exam_access_id       String                  @db.VarChar(36)
    AnnualSemesterExamAcess              AnnualSemesterExamAcess @relation(fields: [annual_semester_exam_access_id], references: [annual_semester_exam_access_id], onDelete: Cascade, onUpdate: Cascade)
    audited_by                           String                  @db.VarChar(36)
    AnnualRegistry                       AnnualRegistry          @relation(fields: [audited_by], references: [annual_registry_id], onDelete: Cascade, onUpdate: Cascade)
}
