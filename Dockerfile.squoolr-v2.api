FROM node:18.12.1-alpine3.16 as builder

# #set the working directory
WORKDIR /app

# # install app dependencies
COPY package*.json ./

# #clean install dependecies
RUN npm install --force

# COPY workspace configs
COPY ./tsconfig.base.json ./
COPY ./nx.json ./

# COPY REQUIRED LIBS AND CONCERNED APP
COPY /libs/encrypter ./libs/encrypter
COPY /libs/utils ./libs/utils
COPY /libs/axios ./libs/axios
COPY /libs/constants ./libs/constants
COPY /libs/nest/auth ./libs/nest/auth
COPY /libs/nest/payment ./libs/nest/payment
COPY /libs/nest/exceptions ./libs/nest/exceptions
COPY /libs/nest/prisma ./libs/nest/prisma
COPY /libs/nest/redis ./libs/nest/redis
COPY /libs/request ./libs/requests
COPY ./apps/squoolr-v2/api ./apps/squoolr-v2/api
COPY ./schemas/squoolr/ ./prisma

#migrate prisma models
RUN npx prisma generate

# #build backend app
RUN npx nx run squoolr-v2-api:build:production

# #provide schema for build usage
COPY ./schemas/squoolr ./dist/apps/squoolr-v2/api/prisma

# #DELETE SOURCE CODE FROM CONTAINER
RUN rm -r ./apps
RUN rm -r ./libs
RUN rm nx.json
RUN rm package.json
RUN rm package-lock.json
RUN rm tsconfig.base.json
RUN rm -r ./prisma

# # expose port 3011 to outer environment
EXPOSE 8080

# run app
WORKDIR /app/dist/apps/squoolr-v2/api
CMD ["node", "main.js"]
